<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IpFIFPl/nf8iSpAv8XEAAAAASUVORK5CYII=
</value>
  </data>
</root>